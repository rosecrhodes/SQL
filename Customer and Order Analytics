-- In this SQL, I am querying a database with multiple tables to quantify statistics about customer and order data.

-- 1. How many orders were placed in January?
SELECT Count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
    AND orderID <> 'Order ID';

-- 2. How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND Product = 'iPhone';

-- 3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT customers.acctnum
FROM BIT_DB.FebSales
    JOIN customers
    ON customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
    AND orderID <> 'Order ID';

-- 4. Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND price <> 'Price Each'
GROUP BY Product, price
ORDER BY price
LIMIT 10;

-- 5. What is the total revenue for each product sold in January?
SELECT Product, SUM(quantity * price) AS revenue
FROM BIT_DB.JanSales
GROUP BY Product;

-- 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, quantity, SUM(quantity)*price AS revenue, location
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

-- 7. How many customers ordered more than 2 products at a time in the month of February, and what was the average amount spent for those customers?
SELECT
    COUNT(customers.acctnum) AS multi_order_customers,
    AVG(quantity*price) AS total_cust_avg_spent
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID = Customers.order_id
WHERE FebSales.Quantity > 2
    AND length(orderID) = 6
    AND orderID <> 'OrderID';

-- 8. All products sold in Los Angeles in February, including how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
    AND Product <> ''
    AND Product <> 'Product'
GROUP BY Product;

-- 9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
    AND length(orderid) = 6 
    AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID) >= 3;

-- 10. How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphone%'
GROUP BY Product;

-- 11. What was the average amount spent across all accounts in February?
SELECT SUM(feb.Quantity*feb.price)/COUNT(cust.acctnum) AS Feb_avg_spent_all_accts
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(feb.orderID) = 6
    AND orderID <> 'Order ID';

-- 12. What was the average quantity of products purchased per account in February?
SELECT sum(FebSales.quantity)/count(customers.acctnum) AS avg_prod_quant_all_accts
FROM BIT_DB.FebSales
JOIN BIT_DB.customers
ON FebSales.orderID = customers.order_id
WHERE length(FebSales.orderID) = 6
    AND FebSales.orderID <> 'Order ID';

-- 13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(quantity*price) AS revenue
FROM BIT_DB.JanSales
WHERE Product <> 'Product'
    AND Product <> ''
GROUP BY Product
ORDER BY revenue DESC
LIMIT 1;
